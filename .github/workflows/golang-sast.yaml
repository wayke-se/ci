on:
  workflow_call:
    inputs:
      go-version:
        type: string
        required: true
      snyk-test:
        type: boolean
        required: false
        default: false
      snyk-code:
        type: boolean
        required: false
        default: false
    secrets:
      go-token:
        required: false
      snyk-token:
        required: false
      nancy-token:
        required: false

name: "Run SAST for Go"

jobs:
  go-vet:
    runs-on: ubuntu-latest
    timeout-minutes: 5

    steps:
    - uses: actions/checkout@v4

    - name: Setup Go
      uses: actions/setup-go@v5
      with:
        go-version: ${{ inputs.go-version }}

    - name: Configure git for private modules
      run: |
        [ ! -z "${{ secrets.go-token }}" ] && git config --global url."https://${{ secrets.go-token }}@github.com".insteadOf "https://github.com" || true

    - name: Download dependencies
      run: |
        go mod download

    - name: Run go-vet
      run: |
        go vet ./...

  golangci-lint:
    runs-on: ubuntu-latest
    timeout-minutes: 5

    steps:
    - uses: actions/checkout@v4

    - name: Setup Go
      uses: actions/setup-go@v5
      with:
        go-version: ${{ inputs.go-version }}

    - name: Configure git for private modules
      run: |
        [ ! -z "${{ secrets.go-token }}" ] && git config --global url."https://${{ secrets.go-token }}@github.com".insteadOf "https://github.com" || true

    - name: Download dependencies
      run: |
        go mod download

    - name: Verify existence of config file
      run: |
        if test -f .golangci.yml; then
          mv .golangci.yml .golangci.yaml
        fi
        if ! test -f .golangci.yaml; then
          cat > .golangci.yaml <<'GOLANGCI_CONFIG'
        version: "2"
        linters:
          exclusions:
            generated: lax
            presets:
              - comments
              - common-false-positives
              - legacy
              - std-error-handling
            paths:
              - third_party$
              - builtin$
              - examples$
        formatters:
          exclusions:
            generated: lax
            paths:
              - third_party$
              - builtin$
              - examples$
        GOLANGCI_CONFIG
        fi

    - name: Run golangci-lint
      uses: golangci/golangci-lint-action@v8
      with:
        version: latest
        skip-cache: true
        args: --config .golangci.yaml

  sonatype-nancy:
    runs-on: ubuntu-latest
    timeout-minutes: 2

    steps:
    - uses: actions/checkout@v4

    - name: Setup Go
      uses: actions/setup-go@v5
      with:
        go-version: ${{ inputs.go-version }}

    - name: Configure git for private modules
      run: |
        [ ! -z "${{ secrets.go-token }}" ] && git config --global url."https://${{ secrets.go-token }}@github.com".insteadOf "https://github.com" || true

    - name: Download dependencies
      run: |
        go mod download

    - name: Populate dependency file
      run: |
        go list -json -m all > go.list

    - name: Run nancy dependency scanner
      uses: wayke-se/ci/.github/actions/golang/sonatype-nancy@master
      with:
        file: go.list
        nancy-token: ${{ secrets.nancy-token }}

  govulncheck:
    runs-on: ubuntu-latest
    timeout-minutes: 2

    steps:
    - uses: actions/checkout@v4

    - name: Setup Go
      uses: actions/setup-go@v5
      with:
        go-version: ${{ inputs.go-version }}

    - name: Configure git for private modules
      run: |
        [ ! -z "${{ secrets.go-token }}" ] && git config --global url."https://${{ secrets.go-token }}@github.com".insteadOf "https://github.com" || true

    - name: Download dependencies
      run: |
        go mod download

    - name: Run govulncheck
      run: |
        go install golang.org/x/vuln/cmd/govulncheck@latest
        govulncheck ./...
