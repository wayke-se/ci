on:
  workflow_call:
    inputs:
      python-version:
        type: string
        required: true
      requirements-file:
        type: string
        required: false
        default: requirements.txt
      with-snyk-test:
        type: boolean
        required: false
        default: true
      with-snyk-code:
        type: boolean
        required: false
        default: true
    secrets:
      nuget-token:
        required: false
      snyk-token:
        required: true

name: "Run SAST for Python"

jobs:
  bandit:
    runs-on: ubuntu-latest
    timeout-minutes: 2

    steps:
      - uses: actions/checkout@v3

      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: ${{ inputs.python-version }}

      - name: Run bandit
        uses: wayke-se/ci/.github/actions/python/bandit@master
  
  pip-audit:
    runs-on: ubuntu-latest
    timeout-minutes: 2

    steps:
      - uses: actions/checkout@v3

      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: ${{ inputs.python-version }}

      - name: Run pip-audit
        uses: wayke-se/ci/.github/actions/python/pip-audit@master
        with:
          requirements-file: ${{ inputs.requirements-file }}

  pre-commit:
    runs-on: ubuntu-latest
    timeout-minutes: 3

    steps:
      - uses: actions/checkout@v3

      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: ${{ inputs.python-version }}
      
      - name: Download dependencies
        run: |
          pip install -r ${{ inputs.requirements-file }}
          pip install pre-commit
      
      - name: Run pre-commit
        run: |
          pre-commit run --show-diff-on-failure --color=always --all-files

  snyk:
    runs-on: ubuntu-latest
    timeout-minutes: 5
    container: "snyk/snyk:python"

    env:
      SNYK_INTEGRATION_NAME: GITHUB_ACTIONS
      SNYK_INTEGRATION_VERSION: python
      SNYK_TOKEN: "${{ secrets.snyk-token }}"

    permissions:
      actions: read
      contents: read
      statuses: read
      security-events: write

    steps:
      - uses: actions/checkout@v3
      
      - name: Download dependencies
        run: |
          pip install -r ${{ inputs.requirements-file}}
      
      - name: Run Snyk to check for vulnerabilities
        if: ${{ inputs.with-snyk-test }}
        run: |
          snyk test --all-projects --severity-threshold=high --policy-path=".snyk"

      - name: Run Snyk to check for code security issues
        if: ${{ inputs.with-snyk-code }}
        run: |
          snyk code test --all-projects --severity-threshold=high --policy-path=".snyk"
