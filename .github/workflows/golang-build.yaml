on:
  workflow_call:
    inputs:
      go-version:
        type: string
        required: true
      registry-url:
        type: string
        required: true
      dockerfile:
        type: string
        required: false
        default: "./Dockerfile"
      snyk-test:
        type: boolean
        required: false
        default: true
      snyk-code:
        type: boolean
        required: false
        default: true
      context:
        type: string
        required: false
        default: "."
      image-name:
        type: string
        required: false
        default: ""
    secrets:
      registry-username:
        required: true
      registry-password:
        required: true
      go-token:
        required: false
      snyk-token:
        required: true
    outputs:
      image:
        value: ${{ jobs.build-docker-image.outputs.image }}

name: "Dockerize Go Application"

jobs:
  scan-code:
    uses: ./.github/workflows/golang-sast.yaml
    with:
      go-version: ${{ inputs.go-version }}
      snyk-test: ${{ inputs.snyk-test }}
      snyk-code: ${{ inputs.snyk-code }}
    secrets:
      go-token: ${{ secrets.go-token }}
      snyk-token: ${{ secrets.snyk-token }}

  build-docker-image:
    runs-on: ubuntu-latest
    timeout-minutes: 20

    outputs:
      image: ${{ inputs.image-name || github.repository }}:${{ github.sha }}

    steps:
      - uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Build Docker image
        uses: docker/build-push-action@v5
        with:
          context: ${{ inputs.context }}
          file: ${{ inputs.dockerfile }}
          platforms: linux/amd64
          tags: ${{ inputs.registry-url }}/${{ inputs.image-name || github.repository }}:${{ github.sha }}
          secrets: |
            gotoken=${{ secrets.go-token }}
          outputs: type=docker,dest=/tmp/image.tar
      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: image
          path: /tmp/image.tar
          retention-days: 1

  push-docker-image:
    needs:
      - scan-code
      - build-docker-image

    runs-on: ubuntu-latest

    steps:
      - name: Connect to Azure Container Registry
        uses: docker/login-action@v2
        with:
          registry: ${{ inputs.registry-url }}
          username: ${{ secrets.registry-username }}
          password: ${{ secrets.registry-password }}
      - name: Download artifact
        uses: actions/download-artifact@v4
        with:
          name: image
          path: /tmp
      - name: Load image
        run: |
          docker load --input /tmp/image.tar
      - name: Upload Docker image to ${{ inputs.registry-url }}
        run: |
          docker push ${{ inputs.registry-url }}/${{ inputs.image-name || github.repository }}:${{ github.sha }}

  scan-docker-image:
    needs:
      - push-docker-image

    uses: ./.github/workflows/docker-sast.yaml
    with:
      dockerfile: ${{ inputs.dockerfile }}
      image: ${{ inputs.image-name || github.repository }}:${{ github.sha }}
      registry-url: ${{ inputs.registry-url }}
    secrets:
      registry-username: ${{ secrets.registry-username }}
      registry-password: ${{ secrets.registry-password }}
      snyk-token: ${{ secrets.snyk-token }}
