on:
  workflow_call:
    inputs:
      dotnet-version:
        type: string
        required: true
      snyk-org:
        type: string
        required: false
        default: "wayke-snyk-pilot-default-organization"
    secrets:
      nuget-token:
        required: false
      snyk-token:
        required: true

name: "Run SAST for .NET"

jobs:
  package-scan:
    runs-on: ubuntu-latest
    timeout-minutes: 2

    steps:
      - uses: actions/checkout@v3

      - name: Setup .NET
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: ${{ inputs.dotnet-version }}
      
      - name: Configure NuGet for private packages
        run: |
          [ ! -z "${{ secrets.nuget-token }} "] && dotnet nuget update source "wayke-gh" --store-password-in-clear-text --configfile NuGet.Config -u "ourbjorn" -p "${{ secrets.nuget-token }}" || true

      - name: Download dependencies
        run: |
          dotnet restore

      - name: Run package scanner
        run: |
          RESULT=$(dotnet list package --vulnerable --include-transitive)
          echo "${RESULT}"
          test $(echo "${RESULT}" | grep -cm 1 "following vulnerable packages") -ne 1

  snyk:
    runs-on: ubuntu-latest
    timeout-minutes: 5
    container: "snyk/snyk:dotnet"

    env:
      SNYK_INTEGRATION_NAME: GITHUB_ACTIONS
      SNYK_INTEGRATION_VERSION: dotnet
      SNYK_TOKEN: "${{ secrets.snyk-token }}"

    permissions:
      actions: read
      contents: read
      statuses: read
      security-events: write

    steps:
      - uses: actions/checkout@v3
      
      - name: Configure NuGet for private packages
        run: |
          [ ! -z "${{ secrets.nuget-token }} "] && dotnet nuget update source "wayke-gh" --store-password-in-clear-text --configfile NuGet.Config -u "ourbjorn" -p "${{ secrets.nuget-token }}" || true
      
      - name: Run Snyk to check for vulnerabilities
        id: snyktest
        continue-on-error: true
        run: |
          snyk test --org="${{ inputs.snyk-org }}" --all-projects --sarif-file-output=snyk.test.sarif --severity-threshold=medium

      - name: Upload result to GitHub Code Scanning
        if: ${{ github.ref == 'refs/heads/master' || github.ref == 'refs/heads/main' }}
        uses: github/codeql-action/upload-sarif@v2
        with:
          sarif_file: snyk.test.sarif

      - name: Run Snyk to check for code security issues
        id: snykcode
        continue-on-error: true
        run: |
          snyk code test --org="${{ inputs.snyk-org }}" --all-projects --sarif-file-output=snyk.code.sarif --severity-threshold=medium

      - name: Upload result to GitHub Code Scanning
        if: ${{ github.ref == 'refs/heads/master' || github.ref == 'refs/heads/main' }}
        uses: github/codeql-action/upload-sarif@v2
        with:
          sarif_file: snyk.code.sarif

      - name: Snyk failure - see output of Snyk actions
        if: steps.snyktest.outcome != 'success' || steps.snykcode.outcome != 'success'
        run: exit 1
