on:
  workflow_call:
    inputs:
      dotnet-version:
        type: string
        required: true
      with-snyk-test:
        type: boolean
        required: false
        default: true
      with-snyk-code:
        type: boolean
        required: false
        default: true
    secrets:
      nuget-token:
        required: false
      snyk-token:
        required: true

name: "Run SAST for .NET"

jobs:
  package-scan:
    runs-on: ubuntu-latest
    timeout-minutes: 2

    steps:
      - uses: actions/checkout@v3

      - name: Setup .NET
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: ${{ inputs.dotnet-version }}
      
      - name: Configure NuGet for private packages
        run: |
          [ ! -z "${{ secrets.nuget-token }}" ] && dotnet nuget update source "wayke-gh" --store-password-in-clear-text --configfile NuGet.Config -u "ourbjorn" -p "${{ secrets.nuget-token }}" || true

      - name: Download dependencies
        run: |
          dotnet restore

      - name: Run package scanner
        run: |
          RESULT=$(dotnet list package --vulnerable --include-transitive)
          echo "${RESULT}"
          test $(echo "${RESULT}" | grep -cm 1 "following vulnerable packages") -ne 1

  snyk:
    runs-on: ubuntu-latest
    timeout-minutes: 5
    container: "snyk/snyk:dotnet"

    env:
      SNYK_INTEGRATION_NAME: GITHUB_ACTIONS
      SNYK_INTEGRATION_VERSION: dotnet
      SNYK_TOKEN: "${{ secrets.snyk-token }}"

    permissions:
      actions: read
      contents: read
      statuses: read
      security-events: write

    steps:
      - uses: actions/checkout@v3
      
      - name: Configure NuGet for private packages
        run: |
          [ ! -z "${{ secrets.nuget-token }}" ] && dotnet nuget update source "wayke-gh" --store-password-in-clear-text --configfile NuGet.Config -u "ourbjorn" -p "${{ secrets.nuget-token }}" || true

      - name: Download dependencies
        run: |
          dotnet restore
      
      - name: Run Snyk to check for vulnerabilities
        if: ${{ inputs.with-snyk-test }}
        run: |
          snyk test --file=$(find . -name '*.sln') --severity-threshold=high --policy-path=".snyk"

      - name: Run Snyk to check for code security issues
        if: ${{ inputs.with-snyk-code }}
        run: |
          snyk code test --file=$(find . -name '*.sln') --severity-threshold=high --policy-path=".snyk"
